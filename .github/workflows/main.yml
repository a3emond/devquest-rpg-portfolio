name: Deploy DevQuest

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy frontend
        run: |
          rsync -avz ./frontend/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_FRONTEND_PATH }}

      - name: Deploy API
        run: |
          rsync -avz ./api/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_API_PATH }}

      - name: Deploy CDN assets
        run: |
          rsync -avz ./assets/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_CDN_PATH }}

      - name: Run Composer install and autoload dump (frontend in Docker)
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker exec ${{ secrets.DOCKER_CONTAINER_NAME }} sh -c "cd ${{ secrets.CONTAINER_FRONTEND_PATH }} && composer install --no-interaction --prefer-dist --optimize-autoloader && composer dump-autoload -o"
          EOF

      # - name: Run Composer install and autoload dump (API in Docker - future use)
      #   run: |
      #     ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
      #       docker exec ${{ secrets.DOCKER_CONTAINER_NAME }} sh -c "cd ${{ secrets.CONTAINER_API_PATH }} && composer install --no-interaction --prefer-dist --optimize-autoloader && composer dump-autoload -o"
      #     EOF

